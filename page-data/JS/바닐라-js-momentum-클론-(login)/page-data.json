{"componentChunkName":"component---src-templates-blog-post-js","path":"/JS/바닐라-js-momentum-클론-(login)/","result":{"data":{"site":{"siteMetadata":{"title":"Mootata's blog","author":"Mootata","siteUrl":"https://github.com/Mootata/mootata.github.io","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"56ccfc8e-bc7c-5f83-a3a0-11e131df4cd2","excerpt":"바닐라 JS를 이용한 Momentum 클론(Login) 최근 JS관련 강의를 들으면서 배우는 것들을 한번 정리해보면 좋겠다는 생각이 들어서 한번 포스팅 해봅니다.\n먼저 html, js, css 전체 코드는 순서대로 아래와 같습니다. 위의 3개가 전체 코드이고, 이제 부분부분 나누어서 설명하겠습니다. 먼저 .js 파일의 가장 앞부분을 보면 위와 같습니다.   login-form 같이 앞에 #같은 문자가 있는 것을 볼 수 있는데, querySelector()는 classname이나 tagname…","html":"<h2 id=\"바닐라-js를-이용한-momentum-클론login\" style=\"position:relative;\"><a href=\"#%EB%B0%94%EB%8B%90%EB%9D%BC-js%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-momentum-%ED%81%B4%EB%A1%A0login\" aria-label=\"바닐라 js를 이용한 momentum 클론login permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>바닐라 JS를 이용한 Momentum 클론(Login)</h2>\n<p>최근 JS관련 강의를 들으면서 배우는 것들을 한번 정리해보면 좋겠다는 생각이 들어서 한번 포스팅 해봅니다.\n먼저 html, js, css 전체 코드는 순서대로 아래와 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Momentum App<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>screen<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>style.css<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>login-form<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">required</span>\n        <span class=\"token attr-name\">maxlength</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>15<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>What is your name ?<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>Log In<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>greeting<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> loginForm <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#login-form'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> loginInput <span class=\"token operator\">=</span> loginForm<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> loginButton <span class=\"token operator\">=</span> loginForm<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> greeting <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#greeting'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">HIDDEN_CLASSNAME</span> <span class=\"token operator\">=</span> <span class=\"token string\">'hidden'</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">USERNAME_KEY</span> <span class=\"token operator\">=</span> <span class=\"token string\">'username'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">onLoginSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 기본 동작 막기 (새로고침 등)</span>\n  <span class=\"token keyword\">const</span> username <span class=\"token operator\">=</span> loginInput<span class=\"token punctuation\">.</span>value\n  localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token constant\">USERNAME_KEY</span><span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">)</span>\n  loginForm<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token constant\">HIDDEN_CLASSNAME</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 유저가 이름을 제출하면 loginForm의 display를 none으로 바꿈</span>\n  <span class=\"token function\">paintGreetings</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">paintGreetings</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">username</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  greeting<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>username<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n  greeting<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token constant\">HIDDEN_CLASSNAME</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> savedUsername <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token constant\">USERNAME_KEY</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>savedUsername <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  loginForm<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token constant\">HIDDEN_CLASSNAME</span><span class=\"token punctuation\">)</span>\n  loginForm<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'submit'</span><span class=\"token punctuation\">,</span> onLoginSubmit<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">paintGreetings</span><span class=\"token punctuation\">(</span>savedUsername<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.hidden</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위의 3개가 전체 코드이고, 이제 부분부분 나누어서 설명하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> loginForm <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#login-form'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> loginInput <span class=\"token operator\">=</span> loginForm<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> loginButton <span class=\"token operator\">=</span> loginForm<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> greeting <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#greeting'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>먼저 .js 파일의 가장 앞부분을 보면 위와 같습니다.  </p>\n<h1 id=\"login-form-같이-앞에-같은-문자가-있는-것을-볼-수-있는데-queryselector는-classname이나-tagname등-검색-할-수-있는-것이-여러종류이기때문에-찾고-싶은-login-form이-classname인지-tagname인지를-명시해줄-필요가-있습니다-만약-위-코드에서-input처럼-아무-표시도-없을-때는-태그에서-해당하는-이름을-가진-것을-찾고-은-id를-통해서-은-클래스-이름을-통해서-찾습니다\" style=\"position:relative;\"><a href=\"#login-form-%EA%B0%99%EC%9D%B4-%EC%95%9E%EC%97%90-%EA%B0%99%EC%9D%80-%EB%AC%B8%EC%9E%90%EA%B0%80-%EC%9E%88%EB%8A%94-%EA%B2%83%EC%9D%84-%EB%B3%BC-%EC%88%98-%EC%9E%88%EB%8A%94%EB%8D%B0-queryselector%EB%8A%94-classname%EC%9D%B4%EB%82%98-tagname%EB%93%B1-%EA%B2%80%EC%83%89-%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94-%EA%B2%83%EC%9D%B4-%EC%97%AC%EB%9F%AC%EC%A2%85%EB%A5%98%EC%9D%B4%EA%B8%B0%EB%95%8C%EB%AC%B8%EC%97%90-%EC%B0%BE%EA%B3%A0-%EC%8B%B6%EC%9D%80-login-form%EC%9D%B4-classname%EC%9D%B8%EC%A7%80-tagname%EC%9D%B8%EC%A7%80%EB%A5%BC-%EB%AA%85%EC%8B%9C%ED%95%B4%EC%A4%84-%ED%95%84%EC%9A%94%EA%B0%80-%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4-%EB%A7%8C%EC%95%BD-%EC%9C%84-%EC%BD%94%EB%93%9C%EC%97%90%EC%84%9C-input%EC%B2%98%EB%9F%BC-%EC%95%84%EB%AC%B4-%ED%91%9C%EC%8B%9C%EB%8F%84-%EC%97%86%EC%9D%84-%EB%95%8C%EB%8A%94-%ED%83%9C%EA%B7%B8%EC%97%90%EC%84%9C-%ED%95%B4%EB%8B%B9%ED%95%98%EB%8A%94-%EC%9D%B4%EB%A6%84%EC%9D%84-%EA%B0%80%EC%A7%84-%EA%B2%83%EC%9D%84-%EC%B0%BE%EA%B3%A0-%EC%9D%80-id%EB%A5%BC-%ED%86%B5%ED%95%B4%EC%84%9C-%EC%9D%80-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%9D%B4%EB%A6%84%EC%9D%84-%ED%86%B5%ED%95%B4%EC%84%9C-%EC%B0%BE%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"login form 같이 앞에 같은 문자가 있는 것을 볼 수 있는데 queryselector는 classname이나 tagname등 검색 할 수 있는 것이 여러종류이기때문에 찾고 싶은 login form이 classname인지 tagname인지를 명시해줄 필요가 있습니다 만약 위 코드에서 input처럼 아무 표시도 없을 때는 태그에서 해당하는 이름을 가진 것을 찾고 은 id를 통해서 은 클래스 이름을 통해서 찾습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>login-form 같이 앞에 #같은 문자가 있는 것을 볼 수 있는데, querySelector()는 classname이나 tagname등 검색 할 수 있는 것이 여러종류이기때문에 찾고 싶은 “login-form”이 classname인지 tagname인지를 명시해줄 필요가 있습니다. 만약 위 코드에서 “input”처럼 아무 표시도 없을 때는 태그에서 해당하는 이름을 가진 것을 찾고, #은 id를 통해서, .은 클래스 이름을 통해서 찾습니다.</h1>\n<p>또 한가지 기억해둘만한 것은 querySelector()는 찾고있는 이름을 가진 것이 여러개일때 그중 첫번째 값만을 가지고 옵니다. 찾고있는 이름과 동일한 모든 것들을 가져오고 싶을때는 querySelectorAll()을 사용합니다.<br>\n그리고 위 코드에는 없지만 getElementById() 같은 것들은 그 이름과 같이 이미 Id로 찾는 것이 정해져 있기 때문에 따로 표시해줄 필요가 없습니다.</p>\n<p>loginForm.querySelector(“input”) 같은 경우에 document.querySelector(“input”)로 찾을 수도 있겠지만 우리는 이미 loginForm을 찾아왔기 때문에 loginForm 내부에서 input과 button을 찾아올 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> savedUsername <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token constant\">USERNAME_KEY</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>savedUsername <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  loginForm<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token constant\">HIDDEN_CLASSNAME</span><span class=\"token punctuation\">)</span>\n  loginForm<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'submit'</span><span class=\"token punctuation\">,</span> onLoginSubmit<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">paintGreetings</span><span class=\"token punctuation\">(</span>savedUsername<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위의 코드를 설명하기 전에 일단 JS코드가 하는 일은 사용자가 이전에 Momentum을 사용한 기록이 있는지, 있다면 화면에 “Hello 사용자가 입력했던 이름” 을 출력해주고, 사용한 기록이 없다면 이름을 입력하는 loginForm을 화면에 보여주는 역할을 합니다.\n이 내용을 기억하면서 코드를 한번 보면 localStorage에 USERNAME_KEY 즉, “username”이라는 키를 가진 값이 존재하는지를 확인함으로써 이전에 사용 기록이 있는지를 확인하고, 만약 없다면 css에서 display를 none으로 설정하는 클래스인 hidden을 loginForm의 classList에서 제거해주는 것으로 loginForm을 사용자에게 보여줍니다. 동시에 submit 이벤트가 발생하면 그것을 처리할 이벤트리스너를 생성합니다.</p>\n<p>그리고 사용자가 화면에 보이는 loginForm에 내용을 입력하고 Log in 버튼을 누르거나 엔터를 치면 EventListener를 통해 입력받은 이름을 포함한 여러가지 정보들을 onLoginSubmit() 함수의 매개변수로 전달해주며 함수를 실행합니다.</p>\n<p>paintGreetings() 함수는 localStorage에 username을 키로하는 값이 있다면 해당 값을 함수에 매개변수로 전달하면서 함수를 실행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">onLoginSubmit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 기본 동작 막기 (새로고침 등)</span>\n  <span class=\"token keyword\">const</span> username <span class=\"token operator\">=</span> loginInput<span class=\"token punctuation\">.</span>value\n  localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token constant\">USERNAME_KEY</span><span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">)</span>\n  loginForm<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token constant\">HIDDEN_CLASSNAME</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 유저가 이름을 제출하면 loginForm의 display를 none으로 바꿈</span>\n  <span class=\"token function\">paintGreetings</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이어서 방금 전 코드에서 loginForm.addEventListener(‘submit’, onLoginSubmit)의 onLoginSubmit이라는 이벤트처리 함수입니다. 코드를 보기 전에 먼저, form 태그 안의 button이나 input은 기본 type이 submit으로 설정되어있습니다. 하지만 위 코드에서는 따로 action을 설정해주지 않았기 때문에 브라우저가 기본 동작을 실행하는데 바로 이 기본 동작이 reload (새로고침)입니다. 이를 방지하기 위해서 브라우저의 기본 동작이 발생하지 않도록 event.preventDefault()를 써준 것입니다.</p>\n<p>뒷부분도 마저 설명하면, username에 사용자가 입력한 이름을 넣어주고, 해당 사용자가 다음에 방문 했을 때 loginForm이 아닌 paintGreetings() 함수를 실행할 수 있도록 localStorage에 USERNAME_KEY 즉, “username”을 키로 가지는 값 const username을 저장해줍니다. 사용자 이름 등록이 끝나면 loginForm의 classList에 hidden을 추가하여 사용자에게 보이지 않게 하고 paintGreetings() 함수로 “Hello 사용자가 등록한 이름”을 출력해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">paintGreetings</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">username</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  greeting<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>username<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n  greeting<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token constant\">HIDDEN_CLASSNAME</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>마지막으로 paintGreetins() 함수입니다. 일단 html의 21번째 줄을 보면 알 수 있듯이 id로 greeting을 가지는 h1 태그의 class는 hidden으로 display가 none으로 설정되어 보이지 않는 상태입니다. 그리고 아무런 innerText도 입력되어 있지않아 클래스에서 hidden이 사라진다고해도 아무것도 보이지 않을것입니다. 따라서 querySelecor로 찾아온 greeting을 id로 갖는 h1태그의 정보들이 담긴 const greeting을 이용해 innerText에 “Hello 매개변수로 넘어온 localStorage 혹은, 방금 사용자가 등록한 이름” 을 입력해주고, classList에서 hidden을 지워줌으로써 사용자에게 h1 태그가 보이도록 해줍니다.</p>\n<p>여기까지가 전체적인 코드의 설명입니다.\n설명하면서 제가 모르는 부분들을 찾을 수 있을 것 같고, 또 공부가 될 것 같아서 일부러 하나하나 자세히 설명했습니다만 어딘가 난잡한 느낌이 좀 듭니다.. 혹시 틀린부분이 있다면 알려주시면 감사하겠습니다.\n질문도 환영합니다.</p>","frontmatter":{"title":"바닐라 JS Momentum 클론 (Login)","date":"February 04, 2022"}}},"pageContext":{"slug":"/JS/바닐라-js-momentum-클론-(login)/","previous":{"fields":{"slug":"/Python/파이썬-사용자-입력-팁/"},"frontmatter":{"title":"파이썬 사용자 입력 팁"}},"next":null}},"staticQueryHashes":["2486386679","3128451518"]}